import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()

iris_df = pd.DataFrame(data=np.c_[iris['data'], iris['target']], columns=iris['feature_names'] + ['target'])

features = ['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)']
target = 'target'

# Split the data into features (X) and target variable (y)
X = iris_df[features]
y = iris_df[target]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

y_pred_classes = np.round(y_pred).astype(int)

accuracy = metrics.accuracy_score(y_test, y_pred_classes)
precision = metrics.precision_score(y_test, y_pred_classes, average='weighted')
recall = metrics.recall_score(y_test, y_pred_classes, average='weighted')
f1_score = metrics.f1_score(y_test, y_pred_classes, average='weighted')
# Print the evaluation metrics
print(f'Accuracy: {accuracy}')
print(f'Precision: {precision}')
print(f'Recall: {recall}')
print(f'F1 Score: {f1_score}')
